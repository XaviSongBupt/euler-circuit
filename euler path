#include <iostream>
#include <stack>
#define maxn 4
using namespace std;
int Graph[maxn][maxn];
int visit[maxn][maxn];
void readG();
void euler(int );
void print();
typedef struct Node{
    int m;
    int n;
}node;
stack<node> s;
int main()
{
    readG();
    int start;
    cout<<"请输入起点："<<endl; 
    scanf("%d",&start);
    euler(start);
    cout<<"欧拉道路（或回路）如下："<<endl; 
    print();
    return 0;
}
void readG()
{
    cout<<"请用矩阵描述图"<<endl;
    for(int i=0;i<maxn;i++)
      for(int j=0;j<maxn;j++)
        scanf("%d",&Graph[i][j]);
    for(int i=0;i<maxn;i++)
      for(int j=0;j<maxn;j++)
       visit[i][j]=0;
}
void euler(int u)
{
    for(int i=0;i<maxn;i++)
      if(Graph[u][i]&&!visit[u][i])
      {
          visit[u][i]=visit[i][u]=1;
          euler(i);
          node p;
          p.m=u;p.n=i;
          s.push(p);
      }
}
void print()
{
    int count=0;
    while(!s.empty())
    {
        node j=s.top();
        printf("(%d,%d) ",j.m,j.n);
        count++;
        if(count%3==0)printf("\n");
        s.pop();
    }
}
